"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import projects as shared_projects
from typing import Optional


@dataclasses.dataclass
class GetProjectsSecurity:
    
    bearer: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetProjectsRequest:
    
    extra_fields_projects: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'extra_fields[projects]', 'style': 'form', 'explode': True }})
    r"""The `renewal_date` is provided as an extra attribute that shows renewal billing cycle date."""  
    filter_billing_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[billing_type]', 'style': 'form', 'explode': True }})
    r"""The billing type to filter by"""  
    filter_description: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[description]', 'style': 'form', 'explode': True }})
    r"""The project description to filter by"""  
    filter_environment: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[environment]', 'style': 'form', 'explode': True }})
    r"""The environment to filter by"""  
    filter_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[name]', 'style': 'form', 'explode': True }})
    r"""The project name to filter by"""  
    filter_slug: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[slug]', 'style': 'form', 'explode': True }})
    r"""The project slug to filter by"""  
    include: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include', 'style': 'form', 'explode': True }})
    r"""`billing` and `team` are provided via include. To request it, just set `include=billing,team` in the query string.(Deprecated)"""  
    

@dataclasses.dataclass
class GetProjectsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    projects: Optional[shared_projects.Projects] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    